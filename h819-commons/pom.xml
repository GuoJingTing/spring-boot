<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.h819</groupId>
    <artifactId>h819-commons</artifactId>
    <name>h819-commons</name>
    <!-- 利用 maven-assembly-plugin 打包，代替默认打包命令-->
    <!-- 生成 jar ，供其他项目使用-->
    <packaging>pom</packaging>
    <version>${h819-commons.version}</version>

    <parent>
        <groupId>org.h819</groupId>
        <artifactId>h819-parent</artifactId>
        <version>1.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <start-class>com.base.SpringBootWebAppApplication</start-class><!--指定 main ，在系统有多个 main 方法时有用-->
    </properties>

    <dependencies>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>


        <!-- 修改文件，并编译后，后自动 reload
        该功能在 eclipse 下，修改文件后保存即可自动 reload
        在 intelliJ IDEA 下，需要 build project 才可以
        参见官方文档说明 https://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-devtools.html -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--
      http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready-endpoints
      -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <version>${spring.security.version}</version>
        </dependency>
        <!-- 使用 spring data jpa querydsl
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-jpa</artifactId>
            <version>${querydsl.version}</version>
        </dependency> -->

        <!--启用 h2
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>-->

        <!--启用 oracle
        注意：
        oracle 8i: spring jpa 无法连接，好像是驱动问题，用 spring jdbc ,驱动用 oracle-connector-java-9.0.2.0.0-for-jdk1.4 -->
        <!--oracle 9i 用 12c 驱动，有问题，查询的数据为空白，改为用 10g 驱动-->
        <!--
        <dependency>
            <groupId>oracle</groupId>
            <artifactId>oracle-connector-java</artifactId>
            <version>${oracle.version.10g}</version>
            <scope>runtime</scope>
        </dependency>-->

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>


        <!-- xss 防御-->
        <dependency>
            <groupId>org.owasp.esapi</groupId>
            <artifactId>esapi</artifactId>
            <version>${org.owasp.esapi.version}</version>
        </dependency>

        <!-- JSON begin =========================================================== -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>


        <!-- apache  =========================================================== -->
        <!-- 不知道不同的组件，  groupId 为什么不一样-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>${commons-compress.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-configuration</groupId>
            <artifactId>commons-configuration</artifactId>
            <version>${commons-configuration.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${commons-collections4.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>${commons-beanutils.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>${commons-net.version}</version>
        </dependency>

        <!-- sftp lib-->
        <dependency>
            <groupId>com.jcraft</groupId>
            <artifactId>jsch</artifactId>
            <version>${jcraft-jsch.vsersion}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-email</artifactId>
            <version>${commons-email.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons-codec.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>${commons-csv.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${commons-cli.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-exec</artifactId>
            <version>${commons-exec.version}</version>
        </dependency>

        <!--poi  -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>${apache.poi.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${apache.poi.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml-schemas</artifactId>
            <version>${apache.poi.version}</version>
        </dependency>


        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${apache.httpcomponents.version}</version>
        </dependency>

        <!-- apache end -->

        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>${quartz.version}</version>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz-jobs</artifactId>
            <version>${quartz.version}</version>
        </dependency>

        <!-- com.google.guava spring side org.h819.web.spring.jpa.dynamicsearch.SearchFilter.java 用到-->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>


        <!-- itext pdf
               需要第三方依赖 bcpkix-jdk15on ,bcprov-jdk15on ，必须有，否则会有异常
               java.lang.NoClassDefFoundError: org/bouncycastle/asn1/ASN1Encodable
           -->
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>itext7-core</artifactId>
            <version>${itextpdf.core.version}</version>
            <type>pom</type> <!--必须加上 <type>pom</type> ，否则编译不通过-->
        </dependency>

        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpkix-jdk15on</artifactId>
            <version>${bcpkix-jdk15on.version}</version>
        </dependency>

        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
            <version>${bcprov-jdk15on.version}</version>
        </dependency>


        <!-- pdf 用到的中文字体
        https://pan.baidu.com/s/1jI9L8ii
        -->
        <dependency>
            <groupId>org.h819</groupId>
            <artifactId>h819-commons-font-STCAIYUN</artifactId>
            <version>publish-1.0.0</version>
        </dependency>
        <!-- pdf 用到 pdfdecrypt
        https://pan.baidu.com/s/1jI9L8ii
        -->
        <dependency>
            <groupId>org.h819</groupId>
            <artifactId>h819-commons-pdfdecrypt</artifactId>
            <version>publish-4.0.0</version>
        </dependency>

        <!--    itext pdf end-->


        <!-- HTML parser =========================================================== -->
        <dependency>
            <!-- jsoup HTML parser library @ http://jsoup.org/ -->
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${org.jsoup.version}</version>
        </dependency>

        <!-- 解析文件内容，判断 mime type 等功能 =========================================================== -->
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-core</artifactId>
            <version>${apache.tika.core.version}</version>
        </dependency>
        <!-- 判断文件的编码 CharSet
         http://userguide.icu-project.org/conversion/detection -->
        <dependency>
            <groupId>com.ibm.icu</groupId>
            <artifactId>icu4j</artifactId>
            <version>${icu4j.version}</version>
        </dependency>

        <!-- 微信开发包 -公众号
          https://github.com/chanjarster/weixin-java-tools
         =========================================================== -->
        <dependency>
            <groupId>me.chanjar</groupId>
            <artifactId>weixin-java-mp</artifactId>
            <version>1.1.1</version>
        </dependency>
        <!-- java 中，只有实现了 Cloneable interface 的对象才能 clone ，本插件则不必实现
       https://code.google.com/p/cloning/
       The cloning library is a small, open source (Apache licensed) Java library which deep-clones objects.
       The objects don't have to implement the Cloneable interface. Effectively, this library can clone ANY Java object.
       It can be used i.e. in cache implementations if you don't want the cached object to be modified or
       whenever you want to create a deep copy of objects.
       =========================================================== -->
        <dependency>
            <groupId>uk.com.robust-it</groupId>
            <artifactId>cloning</artifactId>
            <version>1.9.1</version>
        </dependency>

        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>javax.mail</artifactId>
            <version>${java.mail}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>${apache.velocity.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity-tools</artifactId>
            <version>2.0</version>
        </dependency>


        <!-- 二维码开发包 https://github.com/zxing/zxing/ -->
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>core</artifactId>
            <version>${com.google.zxing.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>javase</artifactId>
            <version>${com.google.zxing.version}</version>
        </dependency>

        <!-- 验证邮件地址用到 ，同时用到了 commons.net-->
        <dependency>
            <groupId>dnsjava</groupId>
            <artifactId>dnsjava</artifactId>
            <version>${dnsjava.version}</version>
        </dependency>

        <!-- 有时间时，換为 jdk8 date-->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.9.2</version>
        </dependency>


        <!--web jar 用处不大，不用
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${bootstrap.version}</version>
        </dependency>

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>${jquery.version}</version>
        </dependency>
        -->

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!--
            Run clean compile and you will get your Query types generated into target/generated-sources/java.
            -->
            <!--
                生成的 QEntity 和原 Entity 在同一个包下，可以直接拷贝到系统的 Entity 包中；也可以把这个路径加到编译路径中，不用拷贝  -->
            <!--
                This annotation processor scans our entities and embeddable classes, and creates the Querydsl query types.
            <plugin>
                <groupId>com.mysema.maven</groupId>
                <artifactId>apt-maven-plugin</artifactId>
                <version>${querydsl.apt.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.querydsl</groupId>
                        <artifactId>querydsl-apt</artifactId>
                        <version>${querydsl.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>

                            <outputDirectory>src/main/querydsl-sources</outputDirectory>

                            <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
                            <logOnlyOnError>true</logOnlyOnError>
                        </configuration>
                    </execution>
                </executions>
            </plugin>     -->

            <!--
    利用 assembly 代替默认的 maven-jar-plugin 插件，可以配置打包文件的类型，打包范围
    打包插件 assembly 用法
    执行步骤:
    1.  设置项目打包类型为 pom :    <packaging>pom</packaging>
    2.  执行 jar 命令，会生成包含所有类的 jar 包(临时包，运行 compile 命令时，会检验此 jar 包是否存在，存在之后，在生成新的包代替)
    3.  执行 package 命令，会按照 assembly 的设置生成 jar 包，代替原来的包，并部署到本地库


        -->
            <!--
            参考 ：
            https://maven.apache.org/plugins/maven-assembly-plugin/single-mojo.html
            https://maven.apache.org/plugins/maven-assembly-plugin/assembly.html

            zip | tar | tar.gz | tar.bz2 | jar | dir | war | and any other format that the ArchiveManager has been configured for

              -->

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <!--定义多个 execution ，可以调用多个 assembly 配置文件。assembly 配置文件中可以定义多种格式包-->
                    <execution>  <!--执行器 mvn assembly:assembly-->
                        <id>make-assembly</id>
                        <!--名字任意 -->
                        <phase>package</phase>
                        <!-- 绑定到package生命周期阶段上，执行插件命令之前 运行 package -->
                        <goals>
                            <goal>single</goal>
                            <!--  执行 assembly:single 命令，assembly 插件推荐只运行 single 命令-->
                        </goals>
                        <configuration>
                            <!-- This is where we use our shared assembly descriptor
                            <descriptorRefs>
                                <descriptorRef>jar-h819</descriptorRef>
                            </descriptorRefs>
                            -->
                            <appendAssemblyId>false</appendAssemblyId>
                            <!--定义打包文件的基本起始目录，和 assembly 配置文件中 directory 属性联合确定打包文件的起始目录-->
                            <archiveBaseDirectory>${project.build.directory}/classes</archiveBaseDirectory>
                            <!--可执行 jar，指定 mainClass
                            <archive>
                                <manifest>
                                    <mainClass>org.sample.App</mainClass>
                                </manifest>
                            </archive>
                            -->
                            <descriptors>
                                <descriptor>src/main/resources/assemblies/jar-h819.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <inherited>false</inherited>
                <executions>

                    <!--制作 oracle driver jar
                      <execution>
                          <id>install-artifacts.1</id>
                          <goals>
                              <goal>install-file</goal>
                          </goals>
                          <phase>validate</phase>
                          <configuration>
                              <file>D:\download\classes12.jar</file>
                              <groupId>oracle</groupId>
                              <artifactId>oracle-connector-java</artifactId>
                              <packaging>jar</packaging>
                              <version>9.0.2.0.0-for-jdk1.3</version>
                          </configuration>
                      </execution>
                     -->
                    <!-- 制作 h819-pdf-font STCAIYUN jar
                 <execution>
                     <id>install-artifacts.4</id>
                     <goals>
                         <goal>install-file</goal>
                     </goals>
                     <phase>validate</phase>
                     <configuration>
                         <file>${project.build.directory}/pdfdecrypt.jar</file>
                         <packaging>jar</packaging>
                         <groupId>org.h819</groupId>
                         <artifactId>h819-commons-pdfdecrypt</artifactId>
                         <version>publish-4.0.0</version>
                     </configuration>
                 </execution> -->

                    <!-- 制作 h819-commons jar-->
                    <execution>
                        <id>install-artifacts.4</id>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <file>${project.build.directory}/h819-commons-${h819-commons.version}.jar</file>
                            <packaging>jar</packaging>
                            <groupId>org.h819</groupId>
                            <artifactId>h819-commons</artifactId>
                            <version>${h819-commons.version}</version>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>

        </plugins>
    </build>

</project>
