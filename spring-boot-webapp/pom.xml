<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.h819</groupId>
    <artifactId>boot-webapp</artifactId>
    <version>0.1.0</version>
    <packaging>war</packaging>
    <name>spring boot web app</name>
    <description>Demo project for Spring Boot</description>

    <parent>
        <groupId>org.h819</groupId>
        <artifactId>h819-parent</artifactId>
        <version>1.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <start-class>com.base.SpringBootWebAppApplication</start-class><!--指定 main ，在系统有多个 main 方法时，保证系统能正确启动-->
    </properties>

    <dependencies>

        <!-- h819 commons
        <dependency>
            <groupId>org.h819</groupId>
            <artifactId>h819-commons</artifactId>
            <version>publish-1.0.19</version>
        </dependency>-->

        <!-- h819 commons model-->
        <dependency>
            <groupId>org.h819</groupId>
            <artifactId>h819-commons</artifactId>
            <version>${h819-commons.version}</version>
        </dependency>

        <!-- 发布为 war 步骤
         见 SpringBootWebappApplication.java
         -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>


        <!-- 修改文件，并编译后，后自动 reload
        该功能在 eclipse 下，修改文件后保存即可自动 reload
        在 intelliJ IDEA 下，需要 build project 才可以
        参见官方文档说明 https://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-devtools.html -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--
      http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready-endpoints
      -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <version>${spring.security.version}</version>
        </dependency>

        <!---->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--启用 h2
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>-->

        <!--启用 oracle
        注意：
        oracle 8i: spring jpa 无法连接，好像是驱动问题，用 spring jdbc ,驱动用 oracle-connector-java-9.0.2.0.0-for-jdk1.4 -->
        <!--oracle 9i 用 12c 驱动，有问题，查询的数据为空白，改为用 10g 驱动-->
        <!--
        <dependency>
            <groupId>oracle</groupId>
            <artifactId>oracle-connector-java</artifactId>
            <version>${oracle.version.10g}</version>
            <scope>runtime</scope>
        </dependency>-->

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>${commons-beanutils.version}</version>
        </dependency>


        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>

        <!--Jackson jdk8 LocalDate-->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.vsersion}</version>
        </dependency>

        <!-- xss 防御
        <dependency>
            <groupId>org.owasp.esapi</groupId>
            <artifactId>esapi</artifactId>
            <version>${org.owasp.esapi.version}</version>
        </dependency>
        -->

        <!--web jar 用处不大，不用
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${bootstrap.version}</version>
        </dependency>

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>${jquery.version}</version>
        </dependency>
        -->

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>

            </plugin>
            <!--
            Run clean compile and you will get your Query types generated into target/generated-sources/java.
            -->
            <!--
                生成的 QEntity 和原 Entity 在同一个包下，可以直接拷贝到系统的 Entity 包中；也可以把这个路径加到编译路径中，不用拷贝  -->
            <!--
                This annotation processor scans our entities and embeddable classes, and creates the Querydsl query types.
            <plugin>
                <groupId>com.mysema.maven</groupId>
                <artifactId>apt-maven-plugin</artifactId>
                <version>1.1.3</version>
                <dependencies>
                    <dependency>
                        <groupId>com.querydsl</groupId>
                        <artifactId>querydsl-apt</artifactId>
                        <version>${querydsl.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>

                            <outputDirectory>src/main/querydsl-sources</outputDirectory>
                            <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
                            <logOnlyOnError>true</logOnlyOnError>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            -->
        </plugins>
    </build>

</project>
